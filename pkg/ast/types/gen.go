//go:build ignore

package main

import (
	"bytes"
	"flag"
	"go/format"
	"log"
	"os"
	"text/template"
)

var filename = flag.String("out", "builtin.go", "output filename")

func main() {
	flag.Parse()

	var buf bytes.Buffer

	err := template.Must(template.New("builtin").Parse(builtinTemplate)).Execute(&buf, flag.Args())
	if err != nil {
		log.Fatal(err)
	}

	out, err := format.Source(buf.Bytes())
	if err != nil {
		log.Fatal(err)
	}

	err = os.WriteFile(*filename, out, 0644)
	if err != nil {
		log.Fatal(err)
	}
}

const builtinTemplate = `
// Code generated by go run gen.go -out builtin.go{{range .}} {{.}}{{end}}; DO NOT EDIT.

package types

{{range .}}
type {{.}} struct{}

func ({{.}}) Hash() []byte {
	return TypeHash([]byte(Type{{.}}))
}

func ({{.}}) TypeName() string {
	return Type{{.}}
}
{{end}}

var Builtin = []string{
	{{range . -}}
	Type{{.}},
	{{end}}
}
`
